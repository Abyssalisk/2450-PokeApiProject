@page "/scoreboard"
@inject NavigationManager navMan
@inject HttpClient client

<h1>Scoreboard</h1>

<p>display top 10 trainers and scores, etc... in pretty grid/table.</p>

<table class="table">
    <thead>
        <tr>
            <th>Trainer</th>
            <th>Score</th>
            <th>Pokemon</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var trainer in topTenTrainers)
        {
            string team = string.Empty;
            @foreach (Pokemon p in trainer.Team)
            {
                if (string.IsNullOrEmpty(team))
                    team += p.Name;
                else
                {
                    team += ", ";
                    team += p.Name;
                }
            }

            <tr>
                <td>@trainer.Handle</td>
                <td>@trainer.Score</td>
                <td>
                    @team
                </td>
            </tr>
        }
    </tbody>
</table>

<button class="btn btn-primary" @onclick="PlayAgain">Play Again?</button>
<button class="btn btn-primary" @onclick="Exit">Exit</button>

@code {

    int score = 0;


    List<Trainer> topTenTrainers = new List<Trainer>();

    private class Trainer
    {
        public string Handle { get; set; }
        public int Score { get; set; }
        public List<Pokemon> Team { get; set; }
    }
    private class Pokemon
    {
        public string Name { get; set; }
    }

    protected override void OnInitialized()
    {
        topTenTrainers.Add(new Trainer()
        {
            Handle = "Spencer",
            Score = 100,
            Team = new List<Pokemon>() { new Pokemon() { Name = "Charizard" },
            new Pokemon() { Name = "Gengar" },
            new Pokemon() { Name = "Houndoom" } }
        });

        topTenTrainers.Add(new Trainer()
        {
            Handle = "Gavin",
            Score = 250,
            Team = new List<Pokemon>() { new Pokemon() { Name = "Gyrados" },
            new Pokemon() { Name = "Articuno" },
            new Pokemon() { Name = "Feraligatr" } }
        });
        topTenTrainers.Add(new Trainer()
        {
            Handle = "Trainer 3",
            Score = 15,
            Team = new List<Pokemon>() { new Pokemon() { Name = "Metapod" },
            new Pokemon() { Name = "Kakuna" },
            new Pokemon() { Name = "Magikarp" } }
        });
    }

    private void PlayAgain()
    {
        Console.WriteLine("Resetting");
        navMan.NavigateTo("team");
    }

    private void Exit()
    {
        Console.WriteLine("Exiting App");
        navMan.NavigateTo("/"); // login
    }
}
