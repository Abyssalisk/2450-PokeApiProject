@inject NavigationManager navMan;
@inject HttpClient client;
@inject IJSRuntime JSRuntime;

@using Web.Shared.Models
@using Web.Client.Components
<link href="https://fonts.googleapis.com/css2?family=Press+Start+2P&display=swap" rel="stylesheet">
<style>
    div, h1, h2, h3, h4, h5, a, button, body, p {
        font-family: 'Press Start 2P', cursive;
    }
</style>

@if (EliteFour != null)
{
    @for (int i = 4; i >= 0; i--)
    {
        //Cycles through the elite four. Once 0 is hit, loop navigates user to the champion page.
        CurrentPoke = Trainer.Team.Lineup[0];
        OpponentPoke = EliteFour[i].Team.Lineup[0];

        if (i != 0)
        {
            <h1>@EliteFour[i].Handle wants to battle!</h1>
            <p>@Trainer.Handle sends out @CurrentPoke.Name <img src="@CurrentPoke.BackImageUri" /></p>
            <p>@EliteFour[i].Handle sends out @OpponentPoke.Name <img src="@OpponentPoke.FrontImageUri" /></p>

            while (true)
            {
                //Incorporate Sam's battle loop

                foreach (var el in EliteFour[i].Team.Lineup)
                {
                    OpponentPoke = el;

                    <p>@OpponentPoke.Name fainted... <img src="@OpponentPoke.FrontImageUri" /></p>
                }
                break;
            }
        }
        //navMan.NavigateTo("Champion");
    }
}
else
{
    <LoadingComponent />
}

@code {

    public List<TrainerModel> EliteFour { get; set; }
    public PokemonService Poke { get; set; }
    public TrainerModel Trainer { get; set; }
    public AuthService Auth { get; set; }
    public PokemonModel CurrentPoke { get; set; }
    public PokemonModel OpponentPoke { get; set; }

    protected override void OnInitialized()
    {
        Poke = new PokemonService();
        Auth = new AuthService();
    }

    protected override async Task OnInitializedAsync()
    {
        var trainerHandle = await Task.Run(async () => await Auth.GetCookieAsync(JSRuntime, "Username"));
        if (string.IsNullOrEmpty(trainerHandle))
            throw new Exception($"Failed to set TrainerHandle from cookie");
        Trainer = await Poke.GetTrainer(client, trainerHandle);
        EliteFour = await Poke.GetElite4AndChampion(client);
    }
}