@page "/newTeam"

@inject NavigationManager navMan;
@inject HttpClient client;
@inject IJSRuntime JSRuntime;
@using Web.Shared.Models
@using Web.Client.Components

@if (Loading)
{
    <LoadingComponent />
}
else
{
    <div class="container-fluid">
        <h1 class="text-center">New Team</h1>

        @if (PokemonNames?.Count > 0)
        {
            <NewLineupComponent PokemonNames="@PokemonNames" Trainer="@Trainer" />
        }
    </div>
}

@code {
    public TrainerModel Trainer { get; set; }
    private AuthService Auth { get; set; }
    private PokemonService Poke { get; set; }
    public string trainerHandle = string.Empty;
    private bool Loading { get; set; }

    public List<CheckBox> PokemonNames { get; set; }

    // set trainer.team to selected team

    protected override void OnInitialized()
    {
        JSRuntime.InvokeAsync<string>("PlayMusic", "route2Music");
        Loading = true;
        Auth = new AuthService();
        Poke = new PokemonService();
        PokemonNames = new List<CheckBox>();
    }

    protected override async Task OnInitializedAsync()
    {
        var names = await Poke.GetAllPokemonNames(client);
        names.ForEach(n => { PokemonNames.Add(new CheckBox() { Text = n, Checked = false }); });
        trainerHandle = await Auth.GetCookieAsync(JSRuntime, "Username");

        if (string.IsNullOrEmpty(trainerHandle))
        {
            navMan.NavigateTo("login");
        }
        else
        {
            Trainer = await Poke.GetTrainer(client, trainerHandle);
            if (Trainer.Lineups == null)
                Trainer.Lineups = new List<LineupModel>(); // used actually, not sure why it doesn't set where expected, look into later
        }
        Loading = false;
    }

    public class CheckBox
    {
        public bool Checked { get; set; }
        public string Text { get; set; }
    }
}

