@page "/team"
@inject NavigationManager navMan
@inject HttpClient client
@inject IJSRuntime JSRuntime;

@using Web.Shared.Models
@using Web.Client.Components

@if (!Loading)
{
    <button class="btn btn-primary float-right" @onclick="CreateNewTeam">Create New Team</button>

    <h2>@Title</h2>

    @foreach (var lineup in Trainer.Lineups)
    {
        teamCounter++;
        <br />
        <div>
            <h3>Lineup @teamCounter</h3>
            <TeamInfoComponent Team="@lineup"></TeamInfoComponent>
        </div>
    }
}
else
{
    <h1>Loading...</h1>
}

@code {
    private TrainerModel Trainer = new TrainerModel();
    public PokemonService Poke { get; set; }
    public AuthService Auth { get; set; }
    private string Title { get; set; }
    private int teamCounter = 0;
    private bool Loading { get; set; }

    private void CreateNewTeam()
    {
        navMan.NavigateTo("newTeam");
    }

    protected override void OnInitialized()
    {
        Loading = true;
        Title = "My Teams";
        Poke = new PokemonService();
        Auth = new AuthService();
    }

    protected override async Task OnInitializedAsync()
    {
        var trainerHandle = await Task.Run(async () => await Auth.GetCookieAsync(JSRuntime, "Username"));

        if (string.IsNullOrEmpty(trainerHandle))
        {
            navMan.NavigateTo("login");
        }
        else
        {
            Trainer = await Poke.GetTrainer(client, trainerHandle);
            trainerHandle = trainerHandle.Replace("\"", string.Empty);
            trainerHandle = char.ToUpper(trainerHandle[0]) + trainerHandle.Substring(1); // uppercase first letter //Sam G: Don't you think we should respect the username's original casing?
            Title = trainerHandle + "\'s Teams";
            Loading = false;
        }
    }
}
