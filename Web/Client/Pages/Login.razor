@page "/login"
@using Web.Shared.Models

@inject NavigationManager navMan
@inject HttpClient client

<div class="container-fluid" style="max-width: 50%;">
    <h1 class="text-center">Login</h1>
    <p class="text-center">Login or Create a New Account</p>

    <!-- LoginForm -->

    <EditForm Context="formContext" Model="Model" OnValidSubmit="Authenticate">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <form>
            <div class="form-group">
                <label for="TrainerHandle">Username: </label>
                <InputText id="Username" class="form-control" placeholder="username" @bind-Value="Model.Username" />
            </div>
            <div class="form-group">
                <label for="Password">Password: </label>
                <InputText type="password" id="Password" class="form-control" placeholder="password" @bind-Value="Model.Password" />
            </div>
            <br />
            <div class="text-center">
                <button class="btn btn-primary" @onclick="Authenticate">Login</button>
                <a href="#" @onclick="CreateAccount">Create New Account</a>
            </div>
        </form>
    </EditForm>
</div>


@code {
    private Web.Shared.Models.Login Model = new Web.Shared.Models.Login();

    private void Authenticate()
    {
        if (!string.IsNullOrEmpty(Model.Username) && !string.IsNullOrEmpty(Model.Password))
        {
            // todo: authenticate
            //http://pokemanz.live/api/login?username=srosy&password=kja;lsdkfjalksjhfjal;bdlf;aju

            //if (result == ok)
        }
        //Console.WriteLine($"{Model.Username} {Model.Password}");
        navMan.NavigateTo("team");
    }

    private void CreateAccount()
    {
        Console.WriteLine("Creating new account...");
        navMan.NavigateTo("newTrainer");
    }
}
