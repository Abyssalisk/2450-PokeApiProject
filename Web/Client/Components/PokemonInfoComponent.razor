@using Web.Shared.Models
<link href="https://fonts.googleapis.com/css2?family=Press+Start+2P&display=swap" rel="stylesheet">
<style>
    div, h1, h2, h3, h4, h5, a, button, body, p {
        font-family: 'Press Start 2P', cursive;
    }
</style>

<div class="card" style="margin: 5px 0 5px 0;">
    <div class="card-body text-center">
        <h5 class="card-title">
            <img src=@Pokemon.FrontImageUri style="height: 50px; width: 50px;" />
            @PascalCaseName(Pokemon.Name)
            @foreach (var type in Pokemon.Types)
            {
                <span class="type type-@type.Name"></span>
            }
        </h5>
        <h7><b>HP:</b> @Pokemon.BaseHP&emsp;<b>ATK:</b> @Pokemon.Attack&emsp;<b>DEF:</b> @Pokemon.Defense</h7><br />
        <h7><b>Sp. ATK:</b> @Pokemon.SpecialAttack&emsp;<b>Sp. DEF:</b> @Pokemon.SpecialDefense&emsp;<b>SPD:</b> @Pokemon.Speed</h7>
        <br />
        <br />
        <h7 class="text-center"><b>Moves</b></h7>
        <p class="card-text text-center">

            @{
                Pokemon.MoveSelections = Pokemon.MoveSelections.Where(p => !string.IsNullOrEmpty(p.Name)).ToList(); // double filter out empty moves until that is fixed in back end
            }

            <table class="table">
                <tr>
                    <td>@PascalCaseName(Pokemon.MoveSelections[0].Name) (@Pokemon.MoveSelections[0].Damage) <span class="type type-@Pokemon.MoveSelections[0].Type"></span></td>
                    <td>@PascalCaseName(Pokemon.MoveSelections[1].Name) (@Pokemon.MoveSelections[1].Damage) <span class="type type-@Pokemon.MoveSelections[1].Type"></span></td>
                </tr>
                <tr>
                    <td>@PascalCaseName(Pokemon.MoveSelections[2].Name) (@Pokemon.MoveSelections[2].Damage) <span class="type type-@Pokemon.MoveSelections[2].Type"></span></td>
                    <td>@PascalCaseName(Pokemon.MoveSelections[3].Name) (@Pokemon.MoveSelections[3].Damage) <span class="type type-@Pokemon.MoveSelections[3].Type"></span></td>
                </tr>

            </table>
        </p>
    </div>
</div>

@code {

    [Parameter] public PokemonModel Pokemon { get; set; }

    private static System.Text.RegularExpressions.Regex pascalReg = new System.Text.RegularExpressions.Regex("\\W\\w");

    public static string PascalCaseName(string toPascal)
    {
        var ms = pascalReg.Matches(toPascal);
        char[] ns = toPascal.ToCharArray();
        if (ns.Length > 0)
        {
            ns[0] = char.ToUpper(ns[0]);
        }
        for (int i = 0; i < ms.Count; i++)
        {
            if (ms[i].Success && ms[i].Index != toPascal.Length - 1)
            {
                ns[i] = char.ToUpper(ns[i]);
            }
        }
        return string.Join("", ns);
    }
}