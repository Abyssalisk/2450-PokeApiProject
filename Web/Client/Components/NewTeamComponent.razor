@inject NavigationManager navMan;
@inject HttpClient client;
@inject IJSRuntime JSRuntime;
@using Web.Shared.Models
@using Web.Client.Components

<div class="container-fluid" style="max-width: 100%; float: left;">
    <h1 class="text-center">New Team</h1>
    @if (PokemonNames?.Count > 0)
    {
        <NewLineupComponent PokemonNames="@PokemonNames" />
    }

</div>

@code {
    public TrainerModel trainer { get; set; } = new TrainerModel();
    private AuthService Auth { get; set; }
    private PokemonService Poke { get; set; }
    public string trainerHandle = string.Empty;

    public List<CheckBox> PokemonNames { get; set; }

    // set trainer.team to selected team

    protected override void OnInitialized()
    {
        trainer = new TrainerModel();
        Auth = new AuthService();
        Poke = new PokemonService();
        PokemonNames = new List<CheckBox>();
    }

    protected override async Task OnInitializedAsync()
    {
        var names = await Poke.GetAllPokemonNames(client);
        names.ForEach(n => { PokemonNames.Add(new CheckBox() { Text = n, Checked = false }); });
        trainerHandle = await Auth.GetCookieAsync(JSRuntime, "Username");

        if (string.IsNullOrEmpty(trainerHandle))
            throw new Exception($"Failed to set TrainerHandle from cookie");

        trainer = await Poke.GetTrainer(client, trainerHandle);
    }

    public class CheckBox
    {
        public bool Checked { get; set; }
        public string Text { get; set; }
    }
}
