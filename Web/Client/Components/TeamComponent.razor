@inject NavigationManager navMan;
@inject HttpClient client;
@inject IJSRuntime JSRuntime;
@using Web.Shared.Models

<div class="container-fluid" style="max-width: 50%;">
    <h1 class="text-center">Team</h1>
    <ExistingLineupComponent ExistingLineUps="@trainer.Lineups" />
</div>

@code {
    public TrainerModel trainer { get; set; } = new TrainerModel() { Lineups = new List<LineupModel>() };
    private AuthService Auth { get; set; }
    private PokemonService Poke { get; set; }
    public string trainerHandle = string.Empty;

    // set trainer.team to selected team

    protected override async Task OnParametersSetAsync()
    {
        trainer = new TrainerModel();
        Auth = new AuthService();
        Poke = new PokemonService();

        trainerHandle = await Task.Run(async () => await Auth.GetCookieAsync(JSRuntime, "Username"));
        if (string.IsNullOrEmpty(trainerHandle))
            throw new Exception($"Failed to set TrainerHandle from cookie");

        trainer = await Poke.GetTrainer(client, trainerHandle);
    }

    protected override void OnInitialized()
    {

    }

    //protected override async Task OnInitializedAsync()
    //{
    //}
}
